name: Publish package to GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      # Setup .npmrc to use GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'

      - name: Enable corepack (optional)
        run: corepack enable pnpm

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Prepare package.json for GitHub Packages
        run: |
          cp package.json package.json.bak

          node -e '
          const fs = require("fs");
          const owner = process.env.GITHUB_REPOSITORY_OWNER || "";
          if (!owner) {
            console.error("GITHUB_REPOSITORY_OWNER is empty.");
            process.exit(1);
          }
          const repo = process.env.GITHUB_REPOSITORY; // e.g. jctaoo/elecrun
          const pkg = JSON.parse(fs.readFileSync("package.json","utf8"));

          pkg.name = "@" + owner + "/elecrun";
          pkg.repository = { type: "git", url: "git+https://github.com/" + repo + ".git" };

          pkg.publishConfig = { registry: "https://npm.pkg.github.com" };

          fs.writeFileSync("package.json", JSON.stringify(pkg, null, 2));
          '

      - name: Publish to GitHub Packages
        run: npm publish --registry=https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}